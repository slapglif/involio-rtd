:py:mod:`app.api.profile.views`
===============================

.. py:module:: app.api.profile.views


Module Contents
---------------


Functions
~~~~~~~~~

.. autoapisummary::

   app.api.profile.views.build_response
   app.api.profile.views.set_file_data
   app.api.profile.views.set_data
   app.api.profile.views.get_data
   app.api.profile.views.set_profile
   app.api.profile.views.get_profile



Attributes
~~~~~~~~~~

.. autoapisummary::

   app.api.profile.views.router


.. py:data:: router
   

   

.. py:function:: build_response(profile: dict)

   The build_response function takes a profile dictionary and returns a response dictionary.
   If the profile is None, then it returns an error message.

   :param profile:dict: Used to Pass the profile information to the build_response function.
   :return: A dictionary with a key of success, which is set to true or false depending on whether the profile variable was passed in.



.. py:function:: set_file_data(request, context)

   The set_file_data function is used to set the file data for a given profile.
   It takes in a request and context, and returns the owner_id of the profile, as well as
   the updated profile data.

   :param request: Used to Get the user's id and the context parameter is used to get the profile data.
   :param context: Used to Pass information to the template.
   :return: The profile data of the user that is currently logged in.


.. py:function:: set_data(request, context)

   The set_data function is used to set the data for a given request.
   It takes in a request and context as parameters, and returns the owner_id
   and profile_data. The owner_id is found by using ModelMixin's get_owner function,
   which finds it from the url. The profile data is found by using Profile's update method,
   which updates all of its fields with values from the form.

   :param request: Used to Get the user's id, and the context parameter is used to get the owner_id.
   :param context: Used to Pass information to the template.
   :return: The profile object.


.. py:function:: get_data(context: app.api.profile.schema.GetUserProfile)

   The get_data function is a helper function that retrieves the user's profile
   from the database. It is called by the get_user_profile endpoint.

   :param context:schema.GetUserProfile: Used to Get the user id from the request.
   :return: A userprofile object.


.. py:function:: set_profile(context: app.api.profile.schema.SetProfile, request: fastapi.Request)
   :async:

   The set_profile function sets the profile of a user.

   :param context:schema.SetProfile: Used to Set the profile of a user.
   :param request:Request: Used to Access the request's cookies.
   :return: A schema.


.. py:function:: get_profile(context: app.api.profile.schema.GetUserProfile)
   :async:

   The get_profile function returns a user's profile.

   :param context:schema.GetUserProfile: Used to Get the profile of a user.
   :return: A userprofile object.


